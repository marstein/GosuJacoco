<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gw.coverage.dbo.CoverageMapper">

    <resultMap id="CoveredFileBaseResultMap" type="gw.coverage.dbo.CoveredFile">
        <result property="packageName" column="package" javaType="java.lang.String"/>
        <result property="fileName" column="filename" javaType="java.lang.String"/>
        <collection property="runList" ofType="gw.coverage.dbo.CoverageRun">
            <result property="branch" column="branch" javaType="String"/>
            <result property="changelist" column="changelist" javaType="String"/>
            <result property="suite" column="suite" javaType="String"/>
            <result property="suiteRunDate" column="suite_run_date" javaType="java.util.Date"/>
            <result property="instructionMissed" column="instruction_missed" javaType="int"/>
            <result property="instructionCovered" column="instruction_covered" javaType="int"/>
            <result property="branchMissed" column="branch_missed" javaType="int"/>
            <result property="branchCovered" column="branch_covered" javaType="int"/>
            <result property="lineMissed" column="line_missed" javaType="int"/>
            <result property="lineCovered" column="line_covered" javaType="int"/>
            <result property="complexityMissed" column="complexity_missed" javaType="int"/>
            <result property="complexityCovered" column="complexity_covered" javaType="int"/>
            <result property="methodMissed" column="method_missed" javaType="int"/>
            <result property="methodCovered" column="method_covered" javaType="int"/>
            <result property="lineCoverage" column="line_coverage"/>
            <!-- leaving the type off in lineCoverage for auto detection seems to work -->
        </collection>
    </resultMap>

    <select id="gw.coverage.dbo.CoverageMapper.findAllCoveredFiles"
            resultMap="CoveredFileBaseResultMap" resultType="gw.coverage.dbo.CoveredFile"
            parameterType="map">
        select p.package, f.filename, c.changelist, b.branch, s.suite, suite_run_date,
        BRANCH_COVERED, BRANCH_MISSED, COMPLEXITY_COVERED, COMPLEXITY_MISSED, INSTRUCTION_COVERED,
        INSTRUCTION_MISSED, LINE_COVERED, LINE_MISSED, METHOD_COVERED, METHOD_MISSED, line_coverage
        from source_coverage sc
        join filename f on sc.filename_id = f.id
        join package p on sc.package_id = p.id
        join changelist c on sc.changelist_id = c.id
        join branch b on sc.branch_id = b.id
        join suite s on sc.suite_id = s.id
        <where>
            <if test="branch != null">
                b.branch = #{branch}
            </if>
            <if test="changelist != null">
                AND c.changelist = #{changelist}
            </if>
            <if test="file != null">
                AND f.filename LIKE #{file}
            </if>
            <if test="runDate != null">
                AND suite_run_date = #{runDate}
            </if>
            <if test="apps != null">
                -- if apps are specified, we always have to include PL apps as well. This is what the OR stmt achieves.
                AND
                <foreach collection="apps" item="item" open="(" separator="OR " close=" OR SUBSTRING(s.suite,1,2)='pl' )">
                    LOWER(SUBSTRING(s.suite, 1, 2)) = #{item}
                </foreach>
            </if>
        </where>
        order by p.package, f.filename
    </select>

    <insert id="gw.coverage.dbo.CoverageMapper.insertBranch" parameterType="String">
        INSERT INTO branch (branch) VALUES ( #{branchName} )
    </insert>
    <select id="gw.coverage.dbo.CoverageMapper.selectBranch" parameterType="String" resultType="int">
        SELECT id from branch where branch=#{branchName}
    </select>

    <insert id="gw.coverage.dbo.CoverageMapper.insertSuite" keyProperty="id">
        INSERT INTO suite (suite) VALUES ( #{suite} )
    </insert>
    <select id="gw.coverage.dbo.CoverageMapper.selectSuite" parameterType="String" resultType="int">
        SELECT id from suite where suite=#{suite}
    </select>

    <insert id="gw.coverage.dbo.CoverageMapper.insertChangelist" keyProperty="id">
        INSERT INTO changelist (changelist) VALUES ( #{changelist} )
    </insert>
    <select id="gw.coverage.dbo.CoverageMapper.selectChangelist" parameterType="String" resultType="int">
        SELECT id from changelist where changelist=#{changelist}
    </select>

    <insert id="gw.coverage.dbo.CoverageMapper.insertPackage" keyProperty="id">
        INSERT INTO package (package) VALUES ( #{package} )
    </insert>
    <select id="gw.coverage.dbo.CoverageMapper.selectPackage" parameterType="String" resultType="int">
        SELECT id from package where package=#{package}
    </select>

    <insert id="gw.coverage.dbo.CoverageMapper.insertFilename" keyProperty="id">
        INSERT INTO filename (filename) VALUES ( #{filename} )
    </insert>
    <select id="gw.coverage.dbo.CoverageMapper.selectFilename" parameterType="String" resultType="int">
        SELECT id from filename where filename=#{filename}
    </select>

    <insert id="gw.coverage.dbo.CoverageMapper.insertClass" keyProperty="id">
        INSERT INTO class (class) VALUES ( #{class} )
    </insert>
    <select id="gw.coverage.dbo.CoverageMapper.selectClass" parameterType="String" resultType="int">
        SELECT id from class where class=#{class}
    </select>

    <insert id="gw.coverage.dbo.CoverageMapper.insertSourceCoverage" parameterType="map">
        INSERT INTO SOURCE_COVERAGE (branch_id, changelist_id, suite_id, package_id, filename_id,
          line_coverage, suite_run_date, INSTRUCTION_MISSED, INSTRUCTION_COVERED , BRANCH_MISSED , BRANCH_COVERED,
          LINE_MISSED , LINE_COVERED , COMPLEXITY_MISSED , COMPLEXITY_COVERED , METHOD_MISSED , METHOD_COVERED)
        values (#{branch_id}, #{changelist_id}, #{suite_id}, #{package_id}, #{filename_id},
            #{line_coverage}, #{suite_run_date}, #{INSTRUCTION_MISSED}, #{INSTRUCTION_COVERED}, #{BRANCH_MISSED}, #{BRANCH_COVERED},
            #{LINE_MISSED}, #{LINE_COVERED}, #{COMPLEXITY_MISSED}, #{COMPLEXITY_COVERED}, #{METHOD_MISSED}, #{METHOD_COVERED} )
    </insert>

    <insert id="gw.coverage.dbo.CoverageMapper.insertPackageCoverage" parameterType="map">
        INSERT INTO PACKAGE_COVERAGE (branch_id, changelist_id, suite_id, package_id, class_id,
          suite_run_date, INSTRUCTION_MISSED, INSTRUCTION_COVERED , BRANCH_MISSED , BRANCH_COVERED,
          LINE_MISSED , LINE_COVERED, COMPLEXITY_MISSED , COMPLEXITY_COVERED , METHOD_MISSED , METHOD_COVERED)
        values (#{branch_id}, #{changelist_id}, #{suite_id}, #{package_id}, #{class_id},
            #{suite_run_date}, #{INSTRUCTION_MISSED}, #{INSTRUCTION_COVERED}, #{BRANCH_MISSED}, #{BRANCH_COVERED},
            #{LINE_MISSED}, #{LINE_COVERED}, #{COMPLEXITY_MISSED}, #{COMPLEXITY_COVERED}, #{METHOD_MISSED}, #{METHOD_COVERED} )
    </insert>

    <update id="createBranch">CREATE TABLE branch (id int identity(1,1) primary key, branch varchar(100))</update>
    <update id="createSuite">CREATE TABLE suite (id int identity(1,1) primary key, suite varchar(100))</update>
    <update id="createChangelist">CREATE TABLE changelist (id int identity(1,1) primary key, changelist varchar(30))</update>
    <update id="createPackage">CREATE TABLE package (id int identity(1,1) primary key, package varchar(200))</update>
    <update id="createFilename">CREATE TABLE filename (id int identity(1,1) primary key, filename varchar(200))</update>
    <update id="createClass">CREATE TABLE class (id int identity(1,1) primary key, class varchar(300))</update>
    <update id="createPackageCoverage">CREATE TABLE PACKAGE_COVERAGE (id int identity(1,1),
            branch_id int,     constraint pbfk foreign key (branch_id) references branch(id),
            changelist_id int, constraint pcfk foreign key (changelist_id) references changelist(id),
            suite_id int,   constraint psfk foreign key (suite_id) references suite(id),
            package_id int, constraint ppfk foreign key (package_id) references package(id),
            class_id int,   constraint pclassfk foreign key (class_id) references class(id),
            suite_run_date datetime,
            INSTRUCTION_MISSED int, INSTRUCTION_COVERED int,
            BRANCH_MISSED int, BRANCH_COVERED int,
            LINE_MISSED int, LINE_COVERED int,
            COMPLEXITY_MISSED int, COMPLEXITY_COVERED int,
            METHOD_MISSED int, METHOD_COVERED int)
    </update>
    <update id="createSourceCoverage">CREATE TABLE SOURCE_COVERAGE (id int identity(1,1),
            branch_id int,     constraint sbfk foreign key (branch_id) references branch(id),
            changelist_id int, constraint scfk foreign key (changelist_id) references changelist(id),
            suite_id int,    constraint ssfk foreign key (suite_id) references suite(id),
            package_id int,  constraint spfk foreign key (package_id) references package(id),
            filename_id int, constraint sffk foreign key (filename_id) references filename(id),
            line_coverage varbinary(1600), suite_run_date datetime,
            INSTRUCTION_MISSED int, INSTRUCTION_COVERED int,
            BRANCH_MISSED int, BRANCH_COVERED int,
            LINE_MISSED int, LINE_COVERED int,
            COMPLEXITY_MISSED int, COMPLEXITY_COVERED int,
            METHOD_MISSED int, METHOD_COVERED int)
    </update>
</mapper>
