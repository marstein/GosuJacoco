<?xml version="1.0" encoding="UTF-8"?>

<!-- 
   Copyright (c) 2009, 2010 Mountainminds GmbH & Co. KG and Contributors
   All rights reserved. This program and the accompanying materials
   are made available under the terms of the Eclipse Public License v1.0
   which accompanies this distribution, and is available at
   http://www.eclipse.org/legal/epl-v10.html
  
   Contributors:
      Marc R. Hoffmann - initial API and implementation
      
   $Id: $
-->

<project name="org.jacoco.agent.rt.buildhook" xmlns:jacocobuild="antlib:org.jacoco.build.ant">

	<path id="dependencies">
		<path refid="bundle-org.jacoco.core"/>
		<path refid="bundle-org.objectweb.asm"/>
	</path>
	
	<property name="do.compile"       value="true"/>
	<property name="do.custompackage" value="true"/>
	
	<target name="custompackage">
		
		<taskdef uri="antlib:org.jacoco.build.ant" resource="org/jacoco/build/tools/ant/antlib.xml">
			<classpath>
				<path refid="bundle-org.jacoco.build"/>
				<path refid="bundle-org.objectweb.asm"/>
		    </classpath>
		</taskdef>
		
		<!-- The random identifier will be used to create a unique package names --> 
		<jacocobuild:randomid name="randomid"/>
		
		<!-- create the all-in-one agent JAR -->
		<jar destfile="${result.dist.lib.dir}/jacocoagent.jar" level="9">
			<manifest>
				<attribute name="Premain-Class" value="org.jacoco.agent.rt_${randomid}.JacocoAgent"/>
				<attribute name="Implementation-Title" value="JaCoCo Java Agent"/>
				<attribute name="Implementation-Vendor" value="Mountainminds GmbH &amp; Co. KG"/>
				<attribute name="Implementation-Version" value="${qualified.bundle.version}"/>
			</manifest>
			
			<!-- Move classes into unique packages -->
			<jacocobuild:renamedclassfileset>
				
				<mapping from="org/jacoco/agent/rt/(.*)" to="org/jacoco/agent/rt_${randomid}/$1"/>
				<mapping from="org/jacoco/core/(.*)" to="org/jacoco/agent/rt_${randomid}/core/$1"/>
				<mapping from="org/objectweb/asm/(.*)" to="org/jacoco/agent/rt_${randomid}/asm/$1"/>
				
				<fileset dir="${result.tmp.bundle.classes.dir}"/>
				
				<!-- Ship required classes only in the agent JAR -->
				<jacocobuild:deepclassfileset>
					<seed>
						<fileset dir="${result.tmp.bundle.classes.dir}"/>
					</seed>
					<fileset dir="${toString:bundle-org.jacoco.core}"/>
					<zipfileset includes="**/*.class">
			        	<fileset file="${toString:bundle-org.objectweb.asm}"/>
			    	</zipfileset>
				</jacocobuild:deepclassfileset>
				
			</jacocobuild:renamedclassfileset>
			
			<file file="${source.bundle.dir}/about.html"/>
			
		</jar>
	</target>
	
</project>